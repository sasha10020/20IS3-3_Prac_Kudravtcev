// <auto-generated />
using System;
using Domain.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Domain.Migrations
{
    [DbContext(typeof(Online_shopContext))]
    partial class Online_shopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Models.Cart", b =>
                {
                    b.Property<int>("IdCart")
                        .HasColumnType("int")
                        .HasColumnName("Id_cart");

                    b.Property<DateTime>("CartDate")
                        .HasColumnType("date")
                        .HasColumnName("Cart_date");

                    b.Property<int>("IdProd")
                        .HasColumnType("int")
                        .HasColumnName("Id_prod");

                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("Id_user");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("Is_deleted");

                    b.Property<int>("ProdCount")
                        .HasColumnType("int")
                        .HasColumnName("Prod_count");

                    b.HasKey("IdCart")
                        .HasName("PK__Carts__54938089EEA7A415");

                    b.HasIndex("IdProd");

                    b.HasIndex("IdUser");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("Domain.Models.Category", b =>
                {
                    b.Property<int>("IdCategory")
                        .HasColumnType("int")
                        .HasColumnName("Id_category");

                    b.Property<int>("IdSpecification")
                        .HasColumnType("int")
                        .HasColumnName("Id_specification");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("Is_deleted");

                    b.Property<string>("NameCategory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name_category");

                    b.HasKey("IdCategory")
                        .HasName("PK__Categori__4E840CE5168E0E5D");

                    b.HasIndex("IdSpecification");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Domain.Models.Order", b =>
                {
                    b.Property<int>("IdOrder")
                        .HasColumnType("int")
                        .HasColumnName("Id_order");

                    b.Property<int>("IdProd")
                        .HasColumnType("int")
                        .HasColumnName("Id_prod");

                    b.Property<int>("IdStatus")
                        .HasColumnType("int")
                        .HasColumnName("Id_status");

                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("Id_user");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("Is_deleted");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("date")
                        .HasColumnName("Order_date");

                    b.Property<int>("ProdCount")
                        .HasColumnType("int")
                        .HasColumnName("Prod_count");

                    b.HasKey("IdOrder")
                        .HasName("PK__Orders__33F95B5C9CD2C543");

                    b.HasIndex("IdProd");

                    b.HasIndex("IdStatus");

                    b.HasIndex("IdUser");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Domain.Models.OrdersStatus", b =>
                {
                    b.Property<int>("IdStatus")
                        .HasColumnType("int")
                        .HasColumnName("Id_status");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("Is_deleted");

                    b.Property<string>("OrdersStatus1")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("Orders_status");

                    b.HasKey("IdStatus")
                        .HasName("PK__Orders_S__9D83DA2AEC11BCD2");

                    b.ToTable("Orders_Status", (string)null);
                });

            modelBuilder.Entity("Domain.Models.Product", b =>
                {
                    b.Property<int>("IdProd")
                        .HasColumnType("int")
                        .HasColumnName("Id_prod");

                    b.Property<int>("IdCategory")
                        .HasColumnType("int")
                        .HasColumnName("Id_category");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("Is_deleted");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,10)");

                    b.Property<int>("ProdCount")
                        .HasColumnType("int")
                        .HasColumnName("Prod_count");

                    b.Property<string>("ProdDescription")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Prod_description");

                    b.HasKey("IdProd")
                        .HasName("PK__Products__5FFE1E8EB1E2286E");

                    b.HasIndex("IdCategory");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Domain.Models.Specification", b =>
                {
                    b.Property<int>("IdSpecification")
                        .HasColumnType("int")
                        .HasColumnName("Id_specification");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("Is_deleted");

                    b.Property<string>("NameSpec")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name_spec");

                    b.Property<int>("SpecValue")
                        .HasColumnType("int")
                        .HasColumnName("Spec_value");

                    b.HasKey("IdSpecification")
                        .HasName("PK__Specific__E5171905E05BAD1A");

                    b.ToTable("Specifications");
                });

            modelBuilder.Entity("Domain.Models.SpecProduct", b =>
                {
                    b.Property<int>("IdSpecProduct")
                        .HasColumnType("int")
                        .HasColumnName("Id_spec_product");

                    b.Property<int>("IdProd")
                        .HasColumnType("int")
                        .HasColumnName("Id_prod");

                    b.Property<int>("IdSpecification")
                        .HasColumnType("int")
                        .HasColumnName("Id_specification");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("Is_deleted");

                    b.Property<int>("SpecValue")
                        .HasColumnType("int")
                        .HasColumnName("Spec_value");

                    b.HasKey("IdSpecProduct")
                        .HasName("PK__Spec_pro__8EE4795589FE2179");

                    b.HasIndex("IdProd");

                    b.HasIndex("IdSpecification");

                    b.ToTable("Spec_products", (string)null);
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("Id_user");

                    b.Property<int>("IdRole")
                        .HasColumnType("int")
                        .HasColumnName("Id_role");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("Is_deleted");

                    b.Property<DateTime>("RegDate")
                        .HasColumnType("date")
                        .HasColumnName("Reg_date");

                    b.Property<string>("UserLogin")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("User_Login");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("User_password");

                    b.HasKey("IdUser")
                        .HasName("PK__Users__B607F2489A4FBC29");

                    b.HasIndex("IdRole");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domain.Models.UsersRole", b =>
                {
                    b.Property<int>("IdRole")
                        .HasColumnType("int")
                        .HasColumnName("Id_role");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("Is_deleted");

                    b.Property<string>("NameRole")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("Name_role");

                    b.HasKey("IdRole")
                        .HasName("PK__Users_ro__46CA8DBE9D0570E7");

                    b.ToTable("Users_roles", (string)null);
                });

            modelBuilder.Entity("Domain.Models.Cart", b =>
                {
                    b.HasOne("Domain.Models.Product", "IdProdNavigation")
                        .WithMany("Carts")
                        .HasForeignKey("IdProd")
                        .IsRequired()
                        .HasConstraintName("FK_Carts_Products");

                    b.HasOne("Domain.Models.User", "IdUserNavigation")
                        .WithMany("Carts")
                        .HasForeignKey("IdUser")
                        .IsRequired()
                        .HasConstraintName("FK_Carts_Users");

                    b.Navigation("IdProdNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("Domain.Models.Category", b =>
                {
                    b.HasOne("Domain.Models.Specification", "IdSpecificationNavigation")
                        .WithMany("Categories")
                        .HasForeignKey("IdSpecification")
                        .IsRequired()
                        .HasConstraintName("FK_Categories_Specifications");

                    b.Navigation("IdSpecificationNavigation");
                });

            modelBuilder.Entity("Domain.Models.Order", b =>
                {
                    b.HasOne("Domain.Models.Product", "IdProdNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("IdProd")
                        .IsRequired()
                        .HasConstraintName("FK_Orders_Products");

                    b.HasOne("Domain.Models.OrdersStatus", "IdStatusNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("IdStatus")
                        .IsRequired()
                        .HasConstraintName("FK_Orders_Orders_Status");

                    b.HasOne("Domain.Models.User", "IdUserNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("IdUser")
                        .IsRequired()
                        .HasConstraintName("FK_Orders_Users");

                    b.Navigation("IdProdNavigation");

                    b.Navigation("IdStatusNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("Domain.Models.Product", b =>
                {
                    b.HasOne("Domain.Models.Category", "IdCategoryNavigation")
                        .WithMany("Products")
                        .HasForeignKey("IdCategory")
                        .IsRequired()
                        .HasConstraintName("FK_Products_Categories");

                    b.Navigation("IdCategoryNavigation");
                });

            modelBuilder.Entity("Domain.Models.SpecProduct", b =>
                {
                    b.HasOne("Domain.Models.Product", "IdProdNavigation")
                        .WithMany("SpecProducts")
                        .HasForeignKey("IdProd")
                        .IsRequired()
                        .HasConstraintName("FK_Spec_products_Products");

                    b.HasOne("Domain.Models.Specification", "IdSpecificationNavigation")
                        .WithMany("SpecProducts")
                        .HasForeignKey("IdSpecification")
                        .IsRequired()
                        .HasConstraintName("FK_Spec_products_Specifications");

                    b.Navigation("IdProdNavigation");

                    b.Navigation("IdSpecificationNavigation");
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.HasOne("Domain.Models.UsersRole", "IdRoleNavigation")
                        .WithMany("Users")
                        .HasForeignKey("IdRole")
                        .IsRequired()
                        .HasConstraintName("FK_Users_Users_roles");

                    b.Navigation("IdRoleNavigation");
                });

            modelBuilder.Entity("Domain.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Domain.Models.OrdersStatus", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Domain.Models.Product", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Orders");

                    b.Navigation("SpecProducts");
                });

            modelBuilder.Entity("Domain.Models.Specification", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("SpecProducts");
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Domain.Models.UsersRole", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
